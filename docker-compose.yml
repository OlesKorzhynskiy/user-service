version: '3.4'

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: username
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - '27018:27017'

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.11-2.0.1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: always

  userservice:
    image: ${DOCKER_REGISTRY-}userservice
    build:
      context: .
      dockerfile: UserService.API/Dockerfile
    depends_on:
      - kafka
    environment:
      MediatorSettings__BootstrapServers: kafka:9093

  consumer:
    image: ${DOCKER_REGISTRY-}consumer
    build:
      context: .
      dockerfile: UserService.Consumer/Dockerfile
    depends_on:
      - kafka
    environment:
      MediatorSettings__BootstrapServers: kafka:9093
      MongoSettings__ConnectionString: mongodb://username:password@mongo:27017